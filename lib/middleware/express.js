import bodyParser from "body-parser";

const apiSchemas = require("./api_schemas");

export default function (app) {
  app.set("port", process.env.PORT || 3000);
  app.use(bodyParser.json());
  app.use(bodyParser.urlencoded({ extended: true }));
}

/**
 * TBD: middleware that checks the request body and querystring against the
 * existing json configuration in order to ensure that:
 * all required parameters are present
 * all parameters are of the correct type
 * non-existing parameters are blocked
 *
 * @throws throw a 400 code error with a relevant error message
 *
 * @param {object} req request object generated by express
 * @param {object} res response object generated by express
 * @param {function} next middleware function
 */
export const checkAgainstRules = (req, res, next) => {
  const pathname = req._parsedUrl.pathname;

  switch (pathname) {
    case "/api/account/role":
      return next();
    case "/api/account/profile":
      var result = apiSchemas.profileValidation(req.body);
      break;
    case "/api/account/member":
      var result = apiSchemas.memberValidation(req.body);
      break;
    case "/api/account/search":
      var result = apiSchemas.searchValidation(req.query);
      break;
  }

  if (result.error) {
    return res.status(400).send(result.error.details[0].message);
  }

  return next();
};
